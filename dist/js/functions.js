document.addEventListener("DOMContentLoaded",(()=>{initSearch(),initNavigation(),initFormValidation(),initYear()}));const initSearch=()=>{const e=document.querySelector(".btn.search.open"),t=document.querySelector(".search__form");if(!e||!t)return;e.addEventListener("click",(e=>{e.stopPropagation(),t.classList.toggle("visible")})),document.addEventListener("click",(n=>{t.contains(n.target)||n.target===e||t.classList.remove("visible")})),document.addEventListener("keydown",(e=>{"Escape"===e.key&&t.classList.remove("visible")}))},initNavigation=()=>{const e=document.querySelector(".btn.hamburger"),t=document.querySelector(".header__nav--list"),n=document.body;if(!e||!t)return;e.addEventListener("click",(e=>{e.stopPropagation(),t.classList.toggle("open"),n.classList.toggle("transformed")})),document.addEventListener("click",(r=>{t.contains(r.target)||r.target===e||(t.classList.remove("open"),n.classList.remove("transformed"))})),document.addEventListener("keydown",(e=>{"Escape"===e.key&&(t.classList.remove("open"),n.classList.remove("transformed"))}))},initFormValidation=()=>{const e=document.querySelector(".form.contacts"),t=document.querySelector(".name"),n=document.querySelector(".email"),r=document.querySelector(".message");if(!(e&&t&&n&&r))return;const a=e=>/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(e),i=(e,t)=>{t?(e=>{e.classList.remove("error")})(e):(e=>{e.classList.add("error")})(e)};t.addEventListener("input",(()=>i(t,t.value.trim()))),n.addEventListener("input",(()=>i(n,n.value.trim()&&a(n.value)))),r.addEventListener("input",(()=>i(r,r.value.trim()))),e.addEventListener("submit",(e=>(e.preventDefault(),i(t,t.value.trim()),i(n,n.value.trim()&&a(n.value)),i(r,r.value.trim()),!!(t.value.trim()&&a(n.value)&&r.value.trim()))))},initYear=()=>{const e=document.querySelector(".copyright span");e&&(e.textContent=(new Date).getFullYear())};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25zLmpzIiwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiaW5pdFNlYXJjaCIsImluaXROYXZpZ2F0aW9uIiwiaW5pdEZvcm1WYWxpZGF0aW9uIiwiaW5pdFllYXIiLCJzZWFyY2hCdG4iLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoRm9ybSIsImUiLCJzdG9wUHJvcGFnYXRpb24iLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJjb250YWlucyIsInRhcmdldCIsInJlbW92ZSIsImtleSIsImhhbWJ1cmdlckJ0biIsIm5hdmlnYXRpb24iLCJib2R5IiwiZm9ybSIsIm5hbWVJbnB1dCIsImVtYWlsSW5wdXQiLCJtZXNzYWdlSW5wdXQiLCJ2YWxpZGF0ZUVtYWlsIiwiZW1haWwiLCJ0ZXN0IiwidmFsaWRhdGVJbnB1dCIsImlucHV0IiwiY29uZGl0aW9uIiwicmVtb3ZlRXJyb3JDbGFzcyIsImFkZCIsImFkZEVycm9yQ2xhc3MiLCJ2YWx1ZSIsInRyaW0iLCJwcmV2ZW50RGVmYXVsdCIsInllYXJTcGFuIiwidGV4dENvbnRlbnQiLCJEYXRlIiwiZ2V0RnVsbFllYXIiXSwic291cmNlcyI6WyJmdW5jdGlvbnMuanMiXSwibWFwcGluZ3MiOiJBQUNBQSxTQUFTQyxpQkFBaUIsb0JBQW9CLEtBQzdDQyxhQUNBQyxpQkFDQUMscUJBQ0FDLFVBQVUsSUFJWCxNQUFNSCxXQUFhLEtBQ2xCLE1BQU1JLEVBQVlOLFNBQVNPLGNBQWMsb0JBQ25DQyxFQUFhUixTQUFTTyxjQUFjLGlCQUcxQyxJQUFLRCxJQUFjRSxFQUFZLE9BdUIvQkYsRUFBVUwsaUJBQWlCLFNBcEJLUSxJQUMvQkEsRUFBRUMsa0JBQ0ZGLEVBQVdHLFVBQVVDLE9BQU8sVUFBVSxJQW1CdkNaLFNBQVNDLGlCQUFpQixTQWZGUSxJQUNsQkQsRUFBV0ssU0FBU0osRUFBRUssU0FBV0wsRUFBRUssU0FBV1IsR0FDbERFLEVBQVdHLFVBQVVJLE9BQU8sVUFDN0IsSUFhRGYsU0FBU0MsaUJBQWlCLFdBVEhRLElBQ1IsV0FBVkEsRUFBRU8sS0FDTFIsRUFBV0csVUFBVUksT0FBTyxVQUM3QixHQU1rRCxFQUk5Q1osZUFBaUIsS0FDdEIsTUFBTWMsRUFBZWpCLFNBQVNPLGNBQWMsa0JBQ3RDVyxFQUFhbEIsU0FBU08sY0FBYyxzQkFDcENZLEVBQU9uQixTQUFTbUIsS0FHdEIsSUFBS0YsSUFBaUJDLEVBQVksT0EwQmxDRCxFQUFhaEIsaUJBQWlCLFNBdkJKUSxJQUN6QkEsRUFBRUMsa0JBQ0ZRLEVBQVdQLFVBQVVDLE9BQU8sUUFDNUJPLEVBQUtSLFVBQVVDLE9BQU8sY0FBYyxJQXFCckNaLFNBQVNDLGlCQUFpQixTQWpCRFEsSUFDbkJTLEVBQVdMLFNBQVNKLEVBQUVLLFNBQVdMLEVBQUVLLFNBQVdHLElBQ2xEQyxFQUFXUCxVQUFVSSxPQUFPLFFBQzVCSSxFQUFLUixVQUFVSSxPQUFPLGVBQ3ZCLElBY0RmLFNBQVNDLGlCQUFpQixXQVZIUSxJQUNSLFdBQVZBLEVBQUVPLE1BQ0xFLEVBQVdQLFVBQVVJLE9BQU8sUUFDNUJJLEVBQUtSLFVBQVVJLE9BQU8sZUFDdkIsR0FNa0QsRUFJOUNYLG1CQUFxQixLQUMxQixNQUFNZ0IsRUFBT3BCLFNBQVNPLGNBQWMsa0JBQzlCYyxFQUFZckIsU0FBU08sY0FBYyxTQUNuQ2UsRUFBYXRCLFNBQVNPLGNBQWMsVUFDcENnQixFQUFldkIsU0FBU08sY0FBYyxZQUc1QyxLQUFLYSxHQUFTQyxHQUFjQyxHQUFlQyxHQUFjLE9BR3pELE1BSU1DLEVBQWlCQyxHQUNELG1EQUNEQyxLQUFLRCxHQUlwQkUsRUFBZ0IsQ0FBQ0MsRUFBT0MsS0FDN0JBLEVBVndCLENBQUNELElBQVVBLEVBQU1qQixVQUFVSSxPQUFPLFFBQVEsRUFVdERlLENBQWlCRixHQVhSLENBQUNBLElBQVVBLEVBQU1qQixVQUFVb0IsSUFBSSxRQUFRLEVBV3RCQyxDQUFjSixFQUFNLEVBZTNEUCxFQUFVcEIsaUJBQWlCLFNBQVMsSUFBTTBCLEVBQWNOLEVBQVdBLEVBQVVZLE1BQU1DLFVBQ25GWixFQUFXckIsaUJBQWlCLFNBQVMsSUFBTTBCLEVBQWNMLEVBQVlBLEVBQVdXLE1BQU1DLFFBQVVWLEVBQWNGLEVBQVdXLFVBQ3pIVixFQUFhdEIsaUJBQWlCLFNBQVMsSUFBTTBCLEVBQWNKLEVBQWNBLEVBQWFVLE1BQU1DLFVBRzVGZCxFQUFLbkIsaUJBQWlCLFVBQVdRLElBQ2hDQSxFQUFFMEIsaUJBZkZSLEVBQWNOLEVBQVdBLEVBQVVZLE1BQU1DLFFBQ3pDUCxFQUFjTCxFQUFZQSxFQUFXVyxNQUFNQyxRQUFVVixFQUFjRixFQUFXVyxRQUM5RU4sRUFBY0osRUFBY0EsRUFBYVUsTUFBTUMsV0FHeENiLEVBQVVZLE1BQU1DLFFBQVVWLEVBQWNGLEVBQVdXLFFBQVVWLEVBQWFVLE1BQU1DLFVBZ0J0RixFQUlHN0IsU0FBVyxLQUNoQixNQUFNK0IsRUFBV3BDLFNBQVNPLGNBQWMsbUJBQ3BDNkIsSUFDSEEsRUFBU0MsYUFBYyxJQUFJQyxNQUFPQyxjQUduQyIsImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFdmVudCBsaXN0ZW5lciB0byBpbml0aWFsaXplIGZ1bmN0aW9ucyBvbmNlIHRoZSBET00gaXMgZnVsbHkgbG9hZGVkXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG5cdGluaXRTZWFyY2goKTtcblx0aW5pdE5hdmlnYXRpb24oKTtcblx0aW5pdEZvcm1WYWxpZGF0aW9uKCk7XG5cdGluaXRZZWFyKCk7XG59KTtcblxuLy8gSW5pdGlhbGl6ZXMgdGhlIHNlYXJjaCBmdW5jdGlvbmFsaXR5XG5jb25zdCBpbml0U2VhcmNoID0gKCkgPT4ge1xuXHRjb25zdCBzZWFyY2hCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ0bi5zZWFyY2gub3BlblwiKTsgLy8gU2VhcmNoIGJ1dHRvblxuXHRjb25zdCBzZWFyY2hGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZWFyY2hfX2Zvcm1cIik7IC8vIFNlYXJjaCBmb3JtXG5cblx0Ly8gSWYgc2VhcmNoIGJ1dHRvbiBvciBmb3JtIGRvZXNuJ3QgZXhpc3QsIGV4aXRcblx0aWYgKCFzZWFyY2hCdG4gfHwgIXNlYXJjaEZvcm0pIHJldHVybjtcblxuXHQvLyBUb2dnbGVzIHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBzZWFyY2ggZm9ybSB3aGVuIHRoZSBidXR0b24gaXMgY2xpY2tlZFxuXHRjb25zdCB0b2dnbGVTZWFyY2hWaXNpYmlsaXR5ID0gKGUpID0+IHtcblx0XHRlLnN0b3BQcm9wYWdhdGlvbigpOyAvLyBQcmV2ZW50cyBldmVudCBidWJibGluZ1xuXHRcdHNlYXJjaEZvcm0uY2xhc3NMaXN0LnRvZ2dsZShcInZpc2libGVcIik7IC8vIFRvZ2dsZSBcInZpc2libGVcIiBjbGFzcyBvbiBmb3JtXG5cdH07XG5cblx0Ly8gSGlkZXMgdGhlIHNlYXJjaCBmb3JtIGlmIHRoZSBjbGljayBpcyBvdXRzaWRlIHRoZSBmb3JtIGFuZCBidXR0b25cblx0Y29uc3QgaGlkZVNlYXJjaEZvcm0gPSAoZSkgPT4ge1xuXHRcdGlmICghc2VhcmNoRm9ybS5jb250YWlucyhlLnRhcmdldCkgJiYgZS50YXJnZXQgIT09IHNlYXJjaEJ0bikge1xuXHRcdFx0c2VhcmNoRm9ybS5jbGFzc0xpc3QucmVtb3ZlKFwidmlzaWJsZVwiKTtcblx0XHR9XG5cdH07XG5cblx0Ly8gQ2xvc2VzIHRoZSBzZWFyY2ggZm9ybSBpZiB0aGUgRXNjYXBlIGtleSBpcyBwcmVzc2VkXG5cdGNvbnN0IGNsb3NlT25Fc2NhcGUgPSAoZSkgPT4ge1xuXHRcdGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuXHRcdFx0c2VhcmNoRm9ybS5jbGFzc0xpc3QucmVtb3ZlKFwidmlzaWJsZVwiKTtcblx0XHR9XG5cdH07XG5cblx0Ly8gRXZlbnQgbGlzdGVuZXJzXG5cdHNlYXJjaEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdG9nZ2xlU2VhcmNoVmlzaWJpbGl0eSk7XG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoaWRlU2VhcmNoRm9ybSk7XG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGNsb3NlT25Fc2NhcGUpO1xufTtcblxuLy8gSW5pdGlhbGl6ZXMgdGhlIG5hdmlnYXRpb24gKGhhbWJ1cmdlciBtZW51KSBmdW5jdGlvbmFsaXR5XG5jb25zdCBpbml0TmF2aWdhdGlvbiA9ICgpID0+IHtcblx0Y29uc3QgaGFtYnVyZ2VyQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idG4uaGFtYnVyZ2VyXCIpOyAvLyBIYW1idXJnZXIgYnV0dG9uXG5cdGNvbnN0IG5hdmlnYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRlcl9fbmF2LS1saXN0XCIpOyAvLyBOYXZpZ2F0aW9uIGxpc3Rcblx0Y29uc3QgYm9keSA9IGRvY3VtZW50LmJvZHk7IC8vIEJvZHkgZWxlbWVudFxuXG5cdC8vIElmIGhhbWJ1cmdlciBidXR0b24gb3IgbmF2aWdhdGlvbiBkb2Vzbid0IGV4aXN0LCBleGl0XG5cdGlmICghaGFtYnVyZ2VyQnRuIHx8ICFuYXZpZ2F0aW9uKSByZXR1cm47XG5cblx0Ly8gVG9nZ2xlcyB0aGUgbmF2aWdhdGlvbiB2aXNpYmlsaXR5IHdoZW4gdGhlIGhhbWJ1cmdlciBidXR0b24gaXMgY2xpY2tlZFxuXHRjb25zdCB0b2dnbGVOYXZpZ2F0aW9uID0gKGUpID0+IHtcblx0XHRlLnN0b3BQcm9wYWdhdGlvbigpOyAvLyBQcmV2ZW50cyBldmVudCBidWJibGluZ1xuXHRcdG5hdmlnYXRpb24uY2xhc3NMaXN0LnRvZ2dsZShcIm9wZW5cIik7IC8vIFRvZ2dsZSBcIm9wZW5cIiBjbGFzcyBvbiBuYXZpZ2F0aW9uXG5cdFx0Ym9keS5jbGFzc0xpc3QudG9nZ2xlKFwidHJhbnNmb3JtZWRcIik7IC8vIFRvZ2dsZSBcInRyYW5zZm9ybWVkXCIgY2xhc3Mgb24gYm9keVxuXHR9O1xuXG5cdC8vIENsb3NlcyB0aGUgbmF2aWdhdGlvbiBpZiB0aGUgY2xpY2sgaXMgb3V0c2lkZSB0aGUgbmF2aWdhdGlvbiBhbmQgYnV0dG9uXG5cdGNvbnN0IGNsb3NlTmF2aWdhdGlvbiA9IChlKSA9PiB7XG5cdFx0aWYgKCFuYXZpZ2F0aW9uLmNvbnRhaW5zKGUudGFyZ2V0KSAmJiBlLnRhcmdldCAhPT0gaGFtYnVyZ2VyQnRuKSB7XG5cdFx0XHRuYXZpZ2F0aW9uLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpO1xuXHRcdFx0Ym9keS5jbGFzc0xpc3QucmVtb3ZlKFwidHJhbnNmb3JtZWRcIik7XG5cdFx0fVxuXHR9O1xuXG5cdC8vIENsb3NlcyB0aGUgbmF2aWdhdGlvbiBpZiB0aGUgRXNjYXBlIGtleSBpcyBwcmVzc2VkXG5cdGNvbnN0IGNsb3NlT25Fc2NhcGUgPSAoZSkgPT4ge1xuXHRcdGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuXHRcdFx0bmF2aWdhdGlvbi5jbGFzc0xpc3QucmVtb3ZlKFwib3BlblwiKTtcblx0XHRcdGJvZHkuY2xhc3NMaXN0LnJlbW92ZShcInRyYW5zZm9ybWVkXCIpO1xuXHRcdH1cblx0fTtcblxuXHQvLyBFdmVudCBsaXN0ZW5lcnNcblx0aGFtYnVyZ2VyQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVOYXZpZ2F0aW9uKTtcblx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGNsb3NlTmF2aWdhdGlvbik7XG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGNsb3NlT25Fc2NhcGUpO1xufTtcblxuLy8gSW5pdGlhbGl6ZXMgdGhlIGZvcm0gdmFsaWRhdGlvbiBmdW5jdGlvbmFsaXR5XG5jb25zdCBpbml0Rm9ybVZhbGlkYXRpb24gPSAoKSA9PiB7XG5cdGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm0uY29udGFjdHNcIik7IC8vIENvbnRhY3QgZm9ybVxuXHRjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hbWVcIik7IC8vIE5hbWUgaW5wdXQgZmllbGRcblx0Y29uc3QgZW1haWxJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZW1haWxcIik7IC8vIEVtYWlsIGlucHV0IGZpZWxkXG5cdGNvbnN0IG1lc3NhZ2VJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWVzc2FnZVwiKTsgLy8gTWVzc2FnZSBpbnB1dCBmaWVsZFxuXG5cdC8vIElmIGZvcm0gb3IgYW55IGlucHV0IGZpZWxkcyBhcmUgbWlzc2luZywgZXhpdFxuXHRpZiAoIWZvcm0gfHwgIW5hbWVJbnB1dCB8fCAhZW1haWxJbnB1dCB8fCAhbWVzc2FnZUlucHV0KSByZXR1cm47XG5cblx0Ly8gRnVuY3Rpb25zIHRvIGFkZCBvciByZW1vdmUgZXJyb3IgY2xhc3Ncblx0Y29uc3QgYWRkRXJyb3JDbGFzcyA9IChpbnB1dCkgPT4gaW5wdXQuY2xhc3NMaXN0LmFkZChcImVycm9yXCIpO1xuXHRjb25zdCByZW1vdmVFcnJvckNsYXNzID0gKGlucHV0KSA9PiBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKFwiZXJyb3JcIik7XG5cblx0Ly8gRW1haWwgdmFsaWRhdGlvbiBmdW5jdGlvblxuXHRjb25zdCB2YWxpZGF0ZUVtYWlsID0gKGVtYWlsKSA9PiB7XG5cdFx0Y29uc3QgZW1haWxQYXR0ZXJuID0gL15bYS16QS1aMC05Ll8lKy1dK0BbYS16QS1aMC05Li1dK1xcLlthLXpBLVpdezIsfSQvO1xuXHRcdHJldHVybiBlbWFpbFBhdHRlcm4udGVzdChlbWFpbCk7IC8vIFJldHVybnMgdHJ1ZSBpZiBlbWFpbCBpcyB2YWxpZFxuXHR9O1xuXG5cdC8vIFZhbGlkYXRlcyBhbiBpbnB1dCBmaWVsZCBiYXNlZCBvbiBhIGNvbmRpdGlvbiBhbmQgYWRkcy9yZW1vdmVzIGVycm9yIGNsYXNzXG5cdGNvbnN0IHZhbGlkYXRlSW5wdXQgPSAoaW5wdXQsIGNvbmRpdGlvbikgPT4ge1xuXHRcdGNvbmRpdGlvbiA/IHJlbW92ZUVycm9yQ2xhc3MoaW5wdXQpIDogYWRkRXJyb3JDbGFzcyhpbnB1dCk7XG5cdH07XG5cblx0Ly8gVmFsaWRhdGVzIHRoZSBlbnRpcmUgZm9ybVxuXHRjb25zdCB2YWxpZGF0ZUZvcm0gPSAoKSA9PiB7XG5cdFx0Ly8gVmFsaWRhdGUgZWFjaCBpbnB1dCBmaWVsZFxuXHRcdHZhbGlkYXRlSW5wdXQobmFtZUlucHV0LCBuYW1lSW5wdXQudmFsdWUudHJpbSgpKTtcblx0XHR2YWxpZGF0ZUlucHV0KGVtYWlsSW5wdXQsIGVtYWlsSW5wdXQudmFsdWUudHJpbSgpICYmIHZhbGlkYXRlRW1haWwoZW1haWxJbnB1dC52YWx1ZSkpO1xuXHRcdHZhbGlkYXRlSW5wdXQobWVzc2FnZUlucHV0LCBtZXNzYWdlSW5wdXQudmFsdWUudHJpbSgpKTtcblxuXHRcdC8vIFJldHVybnMgdHJ1ZSBpZiBhbGwgZmllbGRzIGFyZSB2YWxpZFxuXHRcdHJldHVybiBuYW1lSW5wdXQudmFsdWUudHJpbSgpICYmIHZhbGlkYXRlRW1haWwoZW1haWxJbnB1dC52YWx1ZSkgJiYgbWVzc2FnZUlucHV0LnZhbHVlLnRyaW0oKTtcblx0fTtcblxuXHQvLyBFdmVudCBsaXN0ZW5lcnMgZm9yIHJlYWwtdGltZSBpbnB1dCB2YWxpZGF0aW9uXG5cdG5hbWVJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4gdmFsaWRhdGVJbnB1dChuYW1lSW5wdXQsIG5hbWVJbnB1dC52YWx1ZS50cmltKCkpKTtcblx0ZW1haWxJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4gdmFsaWRhdGVJbnB1dChlbWFpbElucHV0LCBlbWFpbElucHV0LnZhbHVlLnRyaW0oKSAmJiB2YWxpZGF0ZUVtYWlsKGVtYWlsSW5wdXQudmFsdWUpKSk7XG5cdG1lc3NhZ2VJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4gdmFsaWRhdGVJbnB1dChtZXNzYWdlSW5wdXQsIG1lc3NhZ2VJbnB1dC52YWx1ZS50cmltKCkpKTtcblxuXHQvLyBQcmV2ZW50cyBmb3JtIHN1Ym1pc3Npb24gaWYgdmFsaWRhdGlvbiBmYWlsc1xuXHRmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7IC8vIFByZXZlbnQgZm9ybSBmcm9tIHN1Ym1pdHRpbmdcblx0XHRpZiAodmFsaWRhdGVGb3JtKCkpIHtcblx0XHRcdHJldHVybiB0cnVlOyAvLyBJZiB2YWxpZCwgYWxsb3cgZm9ybSBzdWJtaXNzaW9uXG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBmYWxzZTsgLy8gSWYgaW52YWxpZCwgcHJldmVudCBmb3JtIHN1Ym1pc3Npb25cblx0XHR9XG5cdH0pO1xufTtcblxuLy8gU2V0cyB0aGUgY3VycmVudCB5ZWFyIGluIHRoZSBjb3B5cmlnaHQgc2VjdGlvblxuY29uc3QgaW5pdFllYXIgPSAoKSA9PiB7XG5cdGNvbnN0IHllYXJTcGFuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb3B5cmlnaHQgc3BhblwiKTsgLy8gWWVhciBzcGFuIGVsZW1lbnRcblx0aWYgKHllYXJTcGFuKSB7XG5cdFx0eWVhclNwYW4udGV4dENvbnRlbnQgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7IC8vIFNldCBjdXJyZW50IHllYXJcblx0fSBlbHNlIHtcblx0XHRyZXR1cm47XG5cdH1cbn07XG4iXX0=
